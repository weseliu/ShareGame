
syntax="proto3";

package KConnect;

//命令号
enum CommandType
{
	WX_CMD_ZERO_PLACEHOLDER = 0;       //0值占位

	WX_CMD_ERROR = 0x0001;             //出错
		
	//鉴权协议
	WX_CMD_AUTH = 0x0010;              //游戏本身的鉴权请求
	WX_CMD_REPLAY = 0x0012;            //断线重连请求
		
	WX_CMD_PROC = 0x0060;              //业务逻辑数据请求
}

// 公共的枚举定义
enum Common
{
	option allow_alias = true;

	// 公共的返回码定义
	RET_OK = 0;                         //正常
	RET_NEED_LOGIN = 1;                 //需要登陆
	RET_SYSTEM_ERR = 2;                 //系统错误
	RET_RELAY_ERR = 3;                  //透传包错误
	RET_SVR_MATAINING = 4;              //游戏正在努力维护中请您稍后再试

	// 令牌验证返回码定义
	RET_AUTH_TOKEN_ERROR = 1001;          //需要验证码
	RET_AUTH_TOKEN_EXPIRED = 1002;        //令牌过期

	// 数组最大长度
	MAX_LEN_PWD_MD5 = 17;               //密码md5值最大长度
	MAX_LEN_RS_SID = 129;               //RS返回的SID最大长度
	MAX_LEN_LOGINAUTH_DESC = 512;       //鉴权验证及验证码验证刷新协议中的保留字段即错误描述字段最大长度
	MAX_LEN_PROC_BODY = 32768;          //WX_CMD_PROC协议中的body对应的buff最大长度
	MAX_ACCOUNT_LEN = 136;              //帐号最大长度
	MAX_EXTERNAL_ACCOUNT_LEN = 512;     //外部帐号最大长度
	MAX_EXTERNAL_TOKEN_LEN = 512;       //外部帐号相关token或者密码的最大长度
	MAX_EXTERNAL_NAME_LEN = 512;        //外部帐号相关名字的最大长度
	MAX_EXTERNAL_PARA_LEN = 256;        //外部帐号相关的其他参数最大长度
}

message WX_CMD_ERROR_SC
{
	int32 code = 1;              //错误码
}

enum AuthType
{
	AUTHTYPE_AUTO_ACC = 0;       //自动生成帐号
	AUTHTYPE_REG_ACC = 1;        //游戏内注册帐号
}

message WX_CMD_AUTH_CS
{
	int32 game_id = 1;            //游戏id,由RS统一分配,老虎机先暂定为1	
	string identity_token = 2;    //用户身份令牌
}

message WX_CMD_AUTH_SC
{
	int32 game_id = 1;            //游戏id
	int32  ret_code = 2;          //具体命令字相关的错误码参见RET_LOGIN_NEEDCODE等定义
	string ret_code_desc = 3;     //登录错误时具体的提示语	
	string session_id = 4;        //服务端生成的session id，用于用户断线重连等，客户端侧需要记录下来，以备后用
}

// 重连
message WX_CMD_REPLAY_CS
{
	int32 auth_channel = 1;         //鉴权渠道参见相关枚举AUTH_CHANNEL_VIVO等
	string account= 2;              //内部帐号或者外部渠道帐号
	string session_id = 3;          //客户端保存的session id
	string inner_account = 4;       //内部帐号
}

// 重连
message WX_CMD_REPLAY_SC
{
	int32 sub_result_code = 1;       //具体命令字相关的错误码
}

message WX_CMD_PROC_CS
{
	uint32 mask = 1;                  //状态控制掩码(按bit位标记)
	bytes game_proto_pkg = 2;        //需要透传到GameServer的编码包，按照业务侧的协议类型和格式定义编码而成
}

message WX_CMD_PROC_SC
{
	uint32 mask = 1;                  //状态控制掩码(按bit位标记)
	bytes game_proto_pkg = 2;        //需要透传到客户端的编码包，按照业务侧的协议类型和格式定义编码而成
}


// 协议数据包结构
message kcpackc
{
	int32 cmd = 1;                  //命令字
	bytes body = 2;                 //包体,根据Cmd不同对应到不同的包体
}

message kcpacks
{
	int32 cmd = 1;                  //命令字
	bytes body = 2;                 //包体,根据Cmd不同对应到不同的包体
}